{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./src/components/Projects/Projects.js"],"names":["MEDIA_COMPONENTS","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","root","media","img","undefined","withStyles","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","_props$disableSpacing","disableSpacing","spacing","alignItems","padding","marginLeft","Projects","makeStyles","theme","height","flexWrap","justifyContent","card","margin","breakpoints","up","position","title","date","description","divider","chip","navigation","navButtons","button","bottom","useStyles","allMarkdownRemark","useStaticQuery","Box","edges","map","item","i","Zoom","in","transitionDelay","Card","variant","key","node","frontmatter","id","alt","featuredImage","relativePath","slug","CardContent","Typography","color","Divider","technologies","tech","Chip","label","marginTop","Button","size","href","githubUrl","target","rel"],"mappings":"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","file":"12-f6efccb766dd53b9ee18.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {\n    CardMedia,\n    Chip,\n    Button,\n    Typography,\n    CardContent,\n    CardActions,\n    Card,\n    Box, Zoom\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst Projects = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n            height: \"100%\",\n            alignItems: \"stretch\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n        },\n        card: {\n            margin:\"10px\",\n\n            [theme.breakpoints.up('xs')]: {\n                width: \"100%\",\n            },\n            [theme.breakpoints.up('md')]: {\n                width: \"45%\",\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: \"30%\",\n            },\n            position: \"relative\"\n        },\n        title: {\n            margin: theme.spacing(1, 0, 1),\n        },\n        date: {\n            margin: theme.spacing(0, 0, 1),\n        },\n        description: {\n            margin: theme.spacing(2, 0, 2),\n        },\n        divider: {\n            margin: theme.spacing(2, 0, 2),\n        },\n        chip: {\n            margin: 5,\n            marginLeft: 0\n        },\n        navigation: {\n            display: 'flex',\n            justifyContent: \"center\"\n        },\n        navButtons: {\n            margin: 10\n        },\n        button: {\n            position: \"absolute\",\n            bottom: 0,\n        }\n    }));\n\n    const classes = useStyles();\n\n    const { allMarkdownRemark } = useStaticQuery(graphql`\n    query Project {\n  allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(markdown)/(projects)/\"}}, sort: {order: DESC, fields: frontmatter___date}) {\n    edges {\n      node {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          description\n          featuredImage {\n            relativePath\n          }\n          githubUrl\n          projectUrl\n          technologies\n          title\n          slug\n          date\n        }\n      }\n    }\n  }\n}\n    `)\n\n    return(\n        <Box className={classes.root}>\n            {allMarkdownRemark.edges.map((item, i) => {\n                return (\n                    <Zoom in={true} style={{ transitionDelay: `${50 * i}ms`}}>\n                        <Card className={classes.card} variant={\"elevation\"} key={item.node.frontmatter.id}>\n                            <CardMedia\n                                component=\"img\"\n                                alt={item.node.frontmatter.title}\n                                height=\"140\"\n                                image={item.node.frontmatter.featuredImage.relativePath}\n                                title={item.node.frontmatter.title}\n                                id={item.node.frontmatter.slug}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h5\" className={classes.title}>\n                                    {item.node.frontmatter.title}\n                                </Typography>\n                                <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.date}>\n                                    {item.node.frontmatter.date}\n                                </Typography>\n                                <Typography variant=\"body1\" component=\"p\" className={classes.description}>\n                                    {item.node.frontmatter.description}\n                                </Typography>\n                                <Divider variant=\"middle\" className={classes.divider}/>\n                                {item.node.frontmatter.technologies.map(tech => {\n                                    return (\n                                        <Chip label={tech} key={item.node.frontmatter.id} className={classes.chip}/>\n                                    )\n                                })}\n                                <div style={{marginTop:30}}/>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\"\n                                        className={classes.button}\n                                        href={item.node.frontmatter.githubUrl}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                >\n                                    GitHub\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Zoom>\n                )\n            })}\n        </Box>\n    )\n}\n\nexport default Projects"],"sourceRoot":""}